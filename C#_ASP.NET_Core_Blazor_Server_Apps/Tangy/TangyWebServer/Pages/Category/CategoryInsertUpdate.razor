@page "/category/create"
@page "/category/edit/{id:int}"

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3"> @Title Category </h3>
    <div class="col-10">
        @if(IsLoading)
        {
            // display loading gif
            <div class="text-center"> 
                <img src="/images/loading.gif" width="315px" height="318px"/>
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpdateInsertCategory">
                <DataAnnotationsValidator/>
                @*<ValidationSummary/>*@
                <div class="form-group mb-3">
                    <label> Name </label>
                    <InputText @bind-Value="Category.Name" class="form-control"> </InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary" style="width:150px"> @Title </button>
                    <NavLink href="category" class="btn btn-secondary" style="width:150px"> Back to Index </NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    private CategoryDTO Category { get; set; } = new CategoryDTO();

    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        if(Id==0)
        {
            // create request
            IsLoading = false;
        }
        else
        {
            // update request
            Title = "Update";
            await Task.Run(LoadCategory);
        }
        await Task.Run(LoadCategory);
    }

    private void LoadCategory()
    {
        Category = _categoryRepository.Get(Id);
        IsLoading = false;
    }


    private void UpdateInsertCategory()
    {
        if(Category.Id==0)
        {
            // create
            _categoryRepository.Create(Category);
        }
        else
        {
            // update
            _categoryRepository.Update(Category);
        }
        _navigationManager.NavigateTo("/category");
    }
}
