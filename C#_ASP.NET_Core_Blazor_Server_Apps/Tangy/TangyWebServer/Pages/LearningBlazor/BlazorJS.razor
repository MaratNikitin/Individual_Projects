@page "/learnBlazor/blazorJS"
@inject IJSRuntime _JsRuntime
<h3>Blazor with Javascript</h3>

<div class="mb-3">
     <button class="btn btn-secondary" style="width:200px" @onclick="TestConfirmBox"> Test Confirm Button </button>
</div>
<div>
     <button class="btn btn-success mb-3" style="width:200px" @onclick="ToastrSuccess"> Toastr Success </button> <br/>
     <button class="btn btn-danger mb-3" style="width:200px" @onclick="ToastrFailure"> Toastr Failure </button> 
</div>

<div>
     <button class="btn btn-success mb-3" style="width:200px" @onclick="SweetAlertSuccess"> Sweet Alert Success </button> <br/>
     <button class="btn btn-danger mb-3" style="width:200px" @onclick="SweetAlertFailure"> Sweet Alert Failure </button> 
</div>

<div class="row">
    @if(ConfirmResult)
    {
        <p class="text-success"> <b>Confirmation has been obtained!</b>  </p>
    }
    else
    {
        <p class="mt-3"> Confirmation is still pending. </p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        // ToastrSuccess function comes from the IJSRuntimeExtension.cs file inside the 'Helper' folder
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToastrFailure()
    {
        // ToastrError function comes from the IJSRuntimeExtension.cs file inside the 'Helper' folder
        await _JsRuntime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "success", "Mission Accomplished!");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "error", "Task Failed!");
    }
}
