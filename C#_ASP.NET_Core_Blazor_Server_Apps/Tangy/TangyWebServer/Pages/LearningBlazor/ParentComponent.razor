@*
 * This app is built based on Udemy's Blazor Learning course, part of the self-study.
 *      It allows a full range of CRUD operations with a SQL Server DB and demonstrates Javascript integrations
 *      into the Blazor Server projects.
 * Author: Marat Nikitin.
 * When: July 2022.
 * This file is used for generating the Parent Child Relations page.
*@

@page "/learnblazor/parentComponent"

<h3>Parent Child Relations </h3>

<CascadingValue Value="@MessageForGrandChild" Name="message">
    <CascadingValue Value="@LuckyNumber" Name="luckyNumber">
        <_ChildComponent @ref="childComp" OnButtonClick="ShowMessage" Title="This title is passed as parameter from Parent Component"> 
            <ChildContent> Render fragment from the parent is here </ChildContent> 
            <DangerChildContent> Danger content from Render Fragment is here </DangerChildContent>
        </_ChildComponent>
    </CascadingValue>
</CascadingValue>

<p><b> @messageText </b></p>
<_AnotherChildComponent InputAttributes="InputAttributesFromParent"></_AnotherChildComponent>

<div>
    <button class="btn btn-success mt-3" @onclick="()=>childComp.ToastrSuccess()"> Show Toastr</button>
</div>

@code {
    private _ChildComponent childComp;

    public string MessageForGrandChild { get; set; } = "This message is from your grand parent (ParentComponent) passed as a cascading parameter";
    public string LuckyNumber = "7";

    public Dictionary<string, object> InputAttributesFromParent { get; set; } = new Dictionary<string, object>()
    {
        {"required", "required"},
        {"placeholder", "Enter Name From Parent"},
        {"maxlength", 5}
    };
    
    public string messageText = "";

    private void ShowMessage()
    {
        messageText = "The button was clicked from the child component";
    }
}
