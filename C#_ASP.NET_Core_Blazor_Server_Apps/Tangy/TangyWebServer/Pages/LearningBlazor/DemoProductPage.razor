@*
 * This app is built based on Udemy's Blazor Learning course, part of the self-study.
 *      It allows a full range of CRUD operations with a SQL Server DB and demonstrates Javascript integrations
 *      into the Blazor Server projects.
 * Author: Marat Nikitin.
 * When: July 2022.
 * This file is used for generating the Demo Product page.
*@

@page "/learnblazor/demoproduct"
@*@using ModelsClassLibrary.LearnBlazorModels;*@
<h2 class="text-primary">Demo Product</h2>
@*<p> Favourites Total: @SelectedFavouriteCount </p>*@
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach(var prod in Products1)
        {
            <div class="bg-light border m-1 col-5">
                <h4 class="text-secondary">Product - @prod.Id</h4> <br/> 
                @*<input type="checkbox" class="form-check-input" @onchange="(args)=>FavouriteCountUpdate(prod.isActive)"/> Add to Favourites  <br/> <br/>*@ 
                Name - @prod.Name <br/> 
                Show Properties: 
                <input type="checkbox" class="form-check-input" @bind-value="@prod.isActive" checked="@(prod.isActive? "checked" : null)"/><br/>
                @if(prod.isActive)
                {
                    @foreach(var prodProp in prod.ProductProperties)
                    {
                        <p>@prodProp.Key - @prodProp.Value </p> 
                    }
                    <br/>
                }
                <_EditDeleteButton IsActive="@prod.isActive">
                    @*Edit and Delete buttons come from the path specified in the tag's name*@
                </_EditDeleteButton>
            </div>
        }
    </div>
</div>

@code {

    List<DemoProduct> Products1 = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    private EventCallback<bool> OnFavouriteSelection { get; set; }

    protected override void OnInitialized()
    {
        Products1.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            isActive = false,
            Price = 5.99,
            ProductProperties = new()
            {
                new DemoProductProp {Id = 1, Key = "Flavour", Value = "Rose"},
                new DemoProductProp {Id = 2, Key = "Size", Value = "20oz"},
                new DemoProductProp {Id = 3, Key = "Colour", Value = "Purple"}
            }
        });

        Products1.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            isActive = true,
            Price = 9.99,
            ProductProperties = new()
            {
                new DemoProductProp {Id = 1, Key = "Flavour", Value = "Lily"},
                new DemoProductProp {Id = 2, Key = "Size", Value = "18oz"},
                new DemoProductProp {Id = 3, Key = "Colour", Value = "White"}
            }
        });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if(isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    private async Task FavouriteUpdated(ChangeEventArgs e)
    {
        await OnFavouriteSelection.InvokeAsync((bool)e.Value);
    }
}
