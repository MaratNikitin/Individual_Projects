@*
 * This app is built based on Udemy's Blazor Learning course, part of the self-study.
 *      It allows a full range of CRUD operations with a SQL Server DB and demonstrates Javascript integrations
 *      into the Blazor Server projects.
 * Author: Marat Nikitin.
 * When: July 2022.
 * This file is a partial component used for demonstrating usage of a child component.
*@

@inject IJSRuntime _JsRuntime

<div>
    <div class="alert alert-info">
        @Title
    </div>
    <div class="alert alert-success">
        @if(DangerChildContent != null)
        {
            <span> @DangerChildContent </span>
        }
        else
        {
            @if(ChildContent != null)
            {
                <span> @ChildContent </span>
            }
            else
            {
                <span> This is a default content used when ChildContent is null </span>
            }
        }
        
    </div>
    <button class="btn btn-danger mb-2" @onclick="OnButtonClick"> Click Me </button>

    <_GrandChildComponent>

    </_GrandChildComponent>

</div>

@code {
    
    //[Parameter]
    //public string MessageForGrandChild { get; set; }
    
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } // any text between the tags calling this component comes here

    [Parameter]
    public RenderFragment DangerChildContent { get; set; }

    [Parameter]
    public EventCallback OnButtonClick { get; set; }

    public async Task ToastrSuccess()
    {
        // ToastrSuccess function comes from the IJSRuntimeExtension.cs file inside the 'Helper' folder
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }
}
