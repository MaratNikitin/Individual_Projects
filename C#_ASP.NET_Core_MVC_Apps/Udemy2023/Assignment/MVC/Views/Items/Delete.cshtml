@* 
* This ASP.NET Core 7 MVC web app allows displaying items grouped by categories coming from a SQL Server database 
    using Entity Framework Core; full range of CRUD operations is enabled.
*  This file creates a page where the app's user can confirm deleting a selected item (destructive operation, confirmation before it is welcome).
* Author: Marat Nikitin
* Assignment
* When: March 2023
*@

@model DBEntities.Models.Item

@{
    ViewData["Title"] = "Delete";
}

<h1 class="text-center pb-3">Delete the Selected Item</h1>

<h3 class="py-5">Are you sure you want to delete this?</h3>
<div>
    <h4>Item</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ItemName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ItemName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ItemValue)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ItemValue)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="ItemId" />
        <input type="submit" value="Delete" class="btn btn-danger px-4" /> 
        <span class="mx-2">|</span>
        <a asp-action="Index">Back to List</a>
    </form>
</div>
